{"version":3,"file":"popup.689a1a25a4517a0ca7f6.hot-update.js","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Popup/Popup.jsx","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Panel from 'react-flex-panel';\nimport FontAwesome from 'react-fontawesome';\n// import { ObjectInspector } from 'react-inspector';\nimport Greetings from '../../containers/Greetings/Greetings';\nimport './Popup.css';\n\n// const Popup = (handlers) => {\n//   const [uniqueId, setUniqueId] = useState(0);\n//   const [sendList, setSendList] = useState([]);\n//   const [resList, setResList] = useState([]);\n//   /**\n//    * Function\n//    */\n//   const handleSendReceive = ({ type, time, result }) => {\n//     const { response } = result;\n//     let { opcode, payloadData } = response;\n//     if (opcode === 1 || opcode === 2) {\n//       setUniqueId(uniqueId + 1);\n//       // JSON\n//       if (opcode === 1) {\n//         try {\n//           payloadData = JSON.parse(payloadData);\n//         } catch (err) {\n//           payloadData = undefined;\n//           console.log(err);\n//         }\n//       }\n//     }\n//     console.log(type, payloadData);\n//   };\n\n//   const doGet = (params) => {\n//     console.log(params);\n//   };\n\n//   // handlers['Network.webSocketFrameSent'] = doGet;\n//   // handlers['Network.webSocketFrameReceived'] = doGet;\n//   // Object.preventExtensions(handlers);\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">asdfasf</header>\n//       <Greetings />\n//     </div>\n//   );\n// };\n\n// export default Popup;\n\nexport default class Popup extends React.Component {\n  _uniqueId = 0;\n  state = { frames: [], activeId: null, capturing: false };\n  constructor(props) {\n    super(props);\n    props.handlers[\n      'Network.webSocketFrameReceived'\n    ] = this.webSocketFrameReceived.bind(this);\n    props.handlers['Network.webSocketFrameSent'] = this.webSocketFrameSent.bind(\n      this\n    );\n  }\n\n  webSocketFrameReceived({ timestamp, response }) {\n    this.addFrame('incoming', timestamp, response);\n  }\n  webSocketFrameSent({ timestamp, response }) {\n    this.addFrame('outgoing', timestamp, response);\n  }\n\n  addFrame(type, timestamp, response) {\n    const { opcode, payloadData } = response;\n    let rtnData = payloadData;\n    if (opcode === 1 || opcode === 2) {\n      if (opcode === 1) {\n        try {\n          // rtnData = JSON.parse(rtnData);\n        } catch (err) {\n          console.err(err);\n        }\n      }\n    }\n\n    const frame = {\n      id: ++this._uniqueId,\n      type,\n      rtnData,\n    };\n    this.setState((state) => {\n      const { frames } = state;\n      return {\n        ...state,\n        frames: [...frames, frame],\n      };\n    });\n  }\n\n  render() {\n    const { frames, activeId } = this.state;\n    console.log(frames);\n    return (\n      <div className=\"App\">\n        {frames.map((item) => {\n          const { id, rtnData } = item;\n          return <div key={id}>1111{rtnData}</div>;\n          // return <ObjectInspector data={item.rtnData} />;\n        })}\n      </div>\n    );\n  }\n}\n","__webpack_require__.h = () => (\"dc08efa181a3a854165a\")"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AADA;AAAA;AAAA;AAAA;AAGA;AAGA;AALA;AAQA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AAFA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;;;;;;;;;;AA3DA;AACA;AADA;;;;;;;;;;AAAA;;;;;;;;A;;A;;;;;;;;AClDA;;;;A","sourceRoot":""}